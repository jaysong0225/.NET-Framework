/*
Deployment script for BugTrackerDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BugTrackerDb"
:setvar DefaultFilePrefix "BugTrackerDb"
:setvar DefaultDataPath "C:\Users\NSCCStudent\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\NSCCStudent\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[ConfirmUserName]...';


GO
ALTER PROCEDURE [dbo].[ConfirmUserName]
	@UserName varchar(80),
	@Result bit OUTPUT

AS

SET NOCOUNT ON 
/*Stops the message that shows the count
of the number of rows affected by the statement*/
BEGIN
	IF EXISTS (SELECT UserID FROM Users WHERE UserName = @UserName)
			set @Result = 0
	ELSE
			set @Result = 1
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT 1 FROM StatusCodes WHERE statusCodeDesc = 'Unassigned')
BEGIN
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('Unassigned');
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('In Progress');
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('Ready for Review');
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('Closed');
END

DELETE FROM Users;
INSERT INTO Users (UserName, UserEmail, UserTel) 
			VALUES('administrator', 'admin@nscc.ca', '9024121234');
INSERT INTO Users (UserName, UserEmail, UserTel) 
			VALUES('jay', 'jay@nscc.ca', '9024124567');
INSERT INTO Users (UserName, UserEmail, UserTel) 
			VALUES('michael', 'michael@nscc.ca', '9024128926');
INSERT INTO Users (UserName, UserEmail, UserTel) 
			VALUES('jacob', 'jacob@nscc.ca', '9024126382');
INSERT INTO Users (UserName, UserEmail, UserTel) 
			VALUES('mary', 'mary@nscc.ca', '9024123529');
GO

GO
PRINT N'Update complete.';


GO
