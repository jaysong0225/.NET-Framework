/*
Deployment script for BugTrackerDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BugTrackerDb"
:setvar DefaultFilePrefix "BugTrackerDb"
:setvar DefaultDataPath "C:\Users\NSCCStudent\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\NSCCStudent\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT 1 FROM StatusCodes WHERE statusCodeDesc = 'Unassigned')
BEGIN
	/* Seed Data for StatusCodes Table */
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('Unassigned');
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('In Progress');
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('Ready for Review');
	INSERT INTO StatusCodes (statusCodeDesc) VALUES('Closed');

	/* Seed Data for Users Table */
	INSERT INTO Users (UserName, UserEmail, UserTel) 
				VALUES('administrator', 'admin@nscc.ca', '9024121234');
	INSERT INTO Users (UserName, UserEmail, UserTel) 
				VALUES('jay', 'jay@nscc.ca', '9024124567');
	INSERT INTO Users (UserName, UserEmail, UserTel) 
				VALUES('michael', 'michael@nscc.ca', '9024128926');
	INSERT INTO Users (UserName, UserEmail, UserTel) 
				VALUES('jacob', 'jacob@nscc.ca', '9024126382');
	INSERT INTO Users (UserName, UserEmail, UserTel) 
				VALUES('mary', 'mary@nscc.ca', '9024123529');

	/* Seed Data for Applications Table */
	INSERT INTO Applications ('Application1', '1.0', 'Desc of Application1')
			VALUES(@AppName, @AppVersion, @AppDesc);
	INSERT INTO Applications ('Application2', '1.0', 'Desc of Application2')
			VALUES(@AppName, @AppVersion, @AppDesc);

	/* Seed Data for Bugs Table */
	INSERT INTO Bugs (AppID, UserID, BugDate, BugDesc, BugDetails, RepSteps) 
			VALUES(1, 2, '1/23/2018 8:13:11 PM', 'Bug Description1', 'Bug Details1', 'Reproduction Step1');

	/* Seed Data for BugLog Table */
	INSERT INTO BugLog (BugLogDate, StatusCodeID, UserID, BugLogDesc, BugID) 
			VALUES(GetDate(), 1, 2, 'initial bug entered', 1);
END
GO

GO
PRINT N'Update complete.';


GO
